namespace math {
    
typedef __uint128_t INT;
// OEIS
/*
set<INT> carmichael = {
  561, 1105, 1729, 2465, 2821, 6601, 8911, 10585, 15841, 29341, 41041, 46657, 52633, 62745, 63973, 75361, 101101, 115921, 126217, 162401, 172081, 188461, 252601, 278545, 294409, 314821, 334153, 340561, 399001, 410041, 449065, 488881, 512461, 530881, 552721, 656601, 658801, 670033, 748657, 825265, 838201, 852841, 997633, 1024651, 1033669, 1050985, 1082809, 1152271, 1193221, 1461241, 1569457, 1615681, 1773289, 1857241, 1909001, 2100901, 2113921, 2433601, 2455921, 2508013, 2531845, 2628073, 2704801, 3057601, 3146221, 3224065, 3581761, 3664585, 3828001, 4335241, 4463641, 4767841, 4903921, 4909177, 5031181, 5049001, 5148001, 5310721, 5444489, 5481451, 5632705, 5968873, 6049681, 6054985, 6189121, 6313681, 6733693, 6840001, 6868261, 7207201, 7519441, 7995169, 8134561, 8341201, 8355841, 8719309, 8719921, 8830801, 8927101, 9439201, 9494101, 9582145, 9585541, 9613297, 9890881,
  10877581, 12945745, 13992265, 16778881, 18162001, 27336673, 28787185, 31146661, 36121345, 37167361, 40280065, 41298985, 41341321, 41471521, 47006785, 67371265, 67994641, 69331969, 74165065,  
    321197185, 413631505, 417241045, 496050841, 509033161, 611397865, 612347905, 638959321, 672389641, 832060801, 834720601, 868234081, 945959365, 986088961, 1074363265, 1177800481, 1210178305, 1256855041, 1410833281, 1481619601,
5394826801, 6295936465, 12452890681, 13577445505, 15182481601, 20064165121, 22541365441, 24673060945, 26242929505, 26602340401, 27405110161, 28553256865, 33203881585, 38059298641, 39696166081, 40460634865 ,
  232250619601, 306177962545, 432207073585, 576480525985, 658567396081, 689702851201, 747941832001, 1013666981041, 1110495895201, 1111586883121, 1286317859905, 1292652236161, 1341323384401, 1471186523521, 1567214060545,
    9746347772161, 11537919313921, 11985185775745, 14292786468961, 23239986511105, 24465723528961, 26491881502801, 27607174936705, 30614445878401, 30912473358481, 34830684315505, 51620128928641,    
};
*/
inline INT pow(INT x, INT n, INT mod){
  INT y = 1;
  if(n){
    y = pow(x, n >> 1, mod);
    if (!(n & 1)) { y = (y * y) % mod; }
    else { y = (((y * y) % mod) * x) % mod; }
  }
  return y;
}

bool fermat_test(INT const& x, INT a) {
//  if(carmichael.count(x)) { return false; }
  if(x == a) { return 1; }
  if(x < a || (x % a == 0)) { return 0; }
  return pow(a, x-1, x) == 1;
}

bool fermat_test(INT const& x) {
  return fermat_test(x, 2) && fermat_test(x, 3);
}

}